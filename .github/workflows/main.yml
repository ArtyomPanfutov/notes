on: [push, pull_request]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend Image
    steps:
      - name: Checkout
        uses: actions/checkout@v2.6.0
      - name: Setup Java JDK
        uses: actions/setup-java@v3.9.0
        with:
          java-version: 18
          distribution: adopt
      - name: Clean and prepare
        run: mvn clean mn:dockerfile -Dpackaging=docker
      - name: Maven install (with docker image build)
        run: mvn install -Dpackaging=jar
  build-nginx:
    runs-on: ubuntu-latest
    name: Build NGiNX Image
    steps:
      - name: Checkout
        uses: actions/checkout@v2.6.0
      - name: Build Docker Image
        run: docker build -t artyompanfutov/notes-nginx:0.1 ./nginx
  build-react-app:
    runs-on: ubuntu-latest
    name: Build React App Image
    steps:
      - name: Checkout
        uses: actions/checkout@v2.6.0
      - name: Create Env
        run: echo -e "
          REACT_APP_API_URL=$REACT_APP_API_URL
          REACT_APP_AUTH0_AUDIENCE=$REACT_APP_AUTH0_AUDIENCE
          REACT_APP_AUTH0_CALLBACK_URL=$REACT_APP_AUTH0_CALLBACK_URL
          REACT_APP_AUTH0_CLIENT_ID=$REACT_APP_AUTH0_CLIENT_ID
          REACT_APP_AUTH0_DOMAIN=$REACT_APP_AUTH0_DOMAIN
         " >> ./webclient/notes-storage-app/.env
        env: 
          REACT_APP_API_URL: ${{ secrets.APP_API_URL }}
          REACT_APP_AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          REACT_APP_AUTH0_CALLBACK_URL: ${{ secrets.AUTH0_CALLBACK_URL }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          REACT_APP_AUTH0_DOMAIN:  ${{ secrets.AUTH0_DOMAIN }}
      - name: Build Image
        run: docker build -t artyompanfutov/notes-app:0.1 ./webclient/notes-storage-app
      
